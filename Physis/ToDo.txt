Python Wrapper Infrastructure ("import physis")
- Migrate all code in Physis into python wrapper
- Add python test for each piece of code
- Merge branch into main

PhysisPlotter: Rounding Errors
- Write Python script that plots actual trajectory vs. analytic solution
- Experiment with different parameters and write reports
- Resolve rounding errors (rf, vf actual != expected) - perhaps resolve stuttering?

PhysisPlotter: Stability
- Write Python script that plots simulation stability over time
- Experiment with different parameters (dt, t_total, num particles), write report
- Establish a good stability baseline for rendering particles - perhaps resolve stuttering?

Based on Python results, resolve rounding errors in:
- Unit Tests (perhaps create regression tests instead?  Use PhysisPlotter as regression?)
- OpenGL app


// Notes on pybind11
- Make sure you add include and lib paths in project properties to the Python interpreter
  and include dir for the given Python version you wish to use
- Currently, if you build Physis.dll, you must rename it to physis.pyd (or whatever
  name you give it in the PYBIND11_MODULE macro).
- Then, move this file to the directory in which your python code lives.  Alternatively,
  add it to the place you need to add it to.
- Currently, post-build event copies Physis.dll, renames copy to physis.pyd, and moves to
  PhysisPlotter project.

  See: https://www.youtube.com/watch?v=D4cKL0HoN1U